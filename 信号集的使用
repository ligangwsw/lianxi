#include<stdio.h>
#include<stdlib.h>
#include<signal.h>
#include<unistd.h>
void alarmpro(int num);
sigset_t set,oset;
int main(int argc,char*argv[])
{
	int i;
	while(1)
	{

	alarm(5);
	if(argc!=2)
	{
		printf("Usage: without no eough command");
		return 2;
	}
	if(signal(SIGALRM,alarmpro)==-1)
	{
		printf("Couldn't register signal handler!\n");
		exit(1);
	}
	if(sigemptyset(&set)==0)
		printf("------------------\nEmpty set success!\n");
	else printf("Empty set error!\n");
	if(sigaddset(&set,SIGINT)==0)
		printf("Add SIGINT in set success!\n");
	else printf("Add SIGINT in set error!\n");
	if(sigprocmask(SIG_BLOCK,&set,&oset)==0)
		printf("Add SIGINT in mask success!\n");
	else printf("Add SIGINT in mask error!\n");

	for(i=0;i<atoi(argv[1]);i++)
	{
		printf("how are you!!\n");
		sleep(1);
	}
	}
	return 0;
}
void alarmpro(int num)
{
	sigprocmask(SIG_BLOCK,NULL,&oset);
	if(sigismember(&oset,SIGQUIT)==1)
		printf("alarm call:SIGQUIT belong to oset!\n");
	else printf("alarm call:SIGQUIT no belong to oset!\n");
	sigprocmask(SIG_UNBLOCK,&set,&oset);
}
